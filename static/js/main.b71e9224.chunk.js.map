{"version":3,"sources":["components/services/login/Login.js","components/graphic interface/MisRutas.js","components/graphic interface/NavBar.js","components/containers/welcome/Welcome.js","components/containers/pagenotfound/PageNotFound.js","components/services/register/Register.js","components/map/MapSnapshot.js","components/graphic interface/MyRouteCard.js","entities/RouteElement.js","entities/Route.js","parser/ParserJsonLdToRoute.js","parser/PodHandler.js","parser/RouteHandler.js","cache/RoutesChache.js","components/graphic interface/ListUserRoutes.js","components/containers/routes/UserRoutes.js","components/map/DetailsMap.js","components/graphic interface/RouteDetailsCard.js","components/containers/routes/RouteDetails.js","components/containers/stepper/dataform/DataForm.js","components/containers/stepper/reviewform/ReviewForm.js","components/map/EditableMap.js","components/containers/stepper/mapform/MapForm.js","components/containers/stepper/success/SuccessForm.js","components/containers/newrouteform/NewRouteForm.js","components/containers/Routes.js","App.js","index.js","assets/img/logo/logo1.svg"],"names":["auth","require","Login","currentSession","session","popupLogin","popupUri","webId","logout","LoggedOut","Button","variant","color","onClick","LoggedIn","React","Component","MisRutas","useState","open","setOpen","anchorRef","useRef","ref","aria-controls","undefined","aria-haspopup","prevOpen","Popper","anchorEl","current","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","MenuList","MenuItem","window","location","href","ListItemIcon","Typography","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","fontSize","letterSpacing","paper","menu","width","NavBar","classes","className","AppBar","position","Toolbar","Link","underline","src","logo1","alt","height","Welcome","Grid","container","direction","alignItems","justify","marginTop","item","xs","marginBottom","align","Divider","PageNotFound","marginLeft","minWidth","margin","display","flexDirection","avatar","backgroundColor","palette","warning","main","form","justifyContent","submit","link","Register","Container","component","maxWidth","Card","elevation","CssBaseline","Avatar","fullWidth","startIcon","MapSnapshot","points","props","route","getRouteElements","map","point","getLatitude","getLongitude","setPopup","Map","bounds","this","doubleClickZoom","dragging","keyboard","scrollWheelZoom","tap","touchZoom","zoomControl","boxZoom","TileLayer","url","Polyline","positions","background","pos","MyRouteCard","CardContent","getId","getName","sm","dates","Math","floor","random","length","getDate","dist","getDistance","RouteElement","latitude","longitude","name","Route","description","routeElements","comments","media","date","id","uuid","toString","totalDistance","forEach","p","push","lat","lng","generateRouteElements","time","total","aux","i","addDistance","getElevation","routeElement","routePointsJson","toJsonLatLng","JSON","stringify","author","ParserJsonLdToRoute","file","parse","parsePoints","fc","parser","PodHandler","pod","split","viadeFolder","defaultFolder","routesFolder","resourcesFolder","commentsFolder","fileName","routeJson","callback","storeFile","data","createFile","then","response","error","contentType","putFile","routes","itemExists","readFolder","contents","files","readFile","fileContent","console","log","a","storageHandler","storeRoute","getJsonLD","status","loadAllRoutes","loadedRoutes","findAllRoutes","selected","addRouteToCache","find","obj","alert","getRoutesFromPod","getRoutesFromCache","clear","ListUserRoutes","state","cache","size","index","each","UserRoutes","DetailsMap","zoom","attribution","Marker","Popup","RouteDetails","getDescription","useParams","myroute","filter","r","DataForm","handleDateChange","next","e","preventDefault","handleNext","handleMediaChange","selectorFiles","code","values","handleChange","Fragment","gutterBottom","onSubmit","TextField","required","label","defaultValue","autoComplete","onChange","utils","DateFnsUtils","disableToolbar","format","value","KeyboardButtonProps","multiline","rows","disabled","accept","multiple","photos","type","target","htmlFor","videos","FormHelperText","ReviewForm","createRoute","back","handleBack","pointsText","getUTCMonth","getUTCDate","getUTCFullYear","getPointsText","EditableMap","addPoint","latlng","setState","slice","firstPoint","openNotif","updatePoint","event","options","marker_index","getLatLng","removePoint","splice","center","draggable","ondrag","onclick","Alert","MapForm","getTrackPoints","handleMapPoints","text","newSeverity","message","severity","closeNotif","createRef","vertical","horizontal","Snackbar","anchorOrigin","action","IconButton","aria-label","onClose","SuccessForm","download","handleDownload","fill","Tooltip","arrow","NewRouteForm","activeStep","input","newDate","newPoints","fileData","blob","Blob","URL","createObjectURL","document","createElement","click","Array","from","upload","checkSuccessCode","Date","Promise","resolve","uploadRoute","Error","layout","Stepper","stepper","steps","Step","key","StepLabel","step","getStepContent","withStyles","breakpoints","up","padding","buttons","button","icon","grid","Routes","exact","path","to","App","getRoutes","Helmet","createMuiTheme","primary","teal","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b71e9224.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { LoggedIn, LoggedOut } from '@solid/react';\n\nconst auth = require('solid-auth-client');\n\nexport class Login extends React.Component {\n\n    async popupLogin(auth) {\n        let session = await auth.currentSession();\n        let popupUri = 'https://solid.community/common/popup.html';\n        if (!session) {\n            session = await auth.popupLogin({ popupUri });\n        }\n\n        // if(session){\n        //     UsersManager.createUserAndLoadRoutes(`${session.webId}`);\n        // }\n        return (`${session.webId}`); // example of getting user's name. returns something like: \"https://pablocanalsuarez.solid.community/profile/card#me\"\n    };\n\n    logout(auth) {\n        auth.logout();\n    }\n\n    render() {\n        return (\n            <div>\n                <LoggedOut>\n                    <Button variant=\"outlined\" color=\"inherit\" onClick={() => this.popupLogin(auth)}>Sign in</Button>\n                </LoggedOut>\n                <LoggedIn>\n                    <Button variant=\"outlined\" color=\"inherit\" onClick={() => this.logout(auth)}>Sign out</Button>\n                </LoggedIn>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { MenuItem, Paper, Popper, Grow, MenuList, ListItemIcon, Typography } from '@material-ui/core';\nimport ListIcon from '@material-ui/icons/List';\nimport EditLocationIcon from '@material-ui/icons/EditLocation';\n\nconst MisRutas = () => {\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    return (\n        <div>\n            <Button\n                ref={anchorRef}\n                aria-controls={open ? 'menu-list-grow' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleToggle}\n                color=\"inherit\"\n            >\n                My Routes\n            </Button>\n            <Popper open={open} anchorEl={anchorRef.current} transition disablePortal>\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                    >\n                        <Paper >\n                            <MenuList >\n\n                                <MenuItem onClick={() => window.location.href='#/myroutes'}>\n                                    <ListItemIcon>\n                                        <ListIcon />\n                                    </ListItemIcon>\n                                    <Typography>See routes</Typography>\n                                </MenuItem>\n\n                                <MenuItem onClick={() =>  window.location.href='#/newRoute'}>\n                                    <ListItemIcon>\n                                        <EditLocationIcon />\n                                    </ListItemIcon>\n                                    <Typography>Create new</Typography>\n                                </MenuItem>\n\n                            </MenuList>\n                        </Paper>\n                    </Grow>\n                )}\n            </Popper>\n        </div>\n    );\n};\n\nexport default MisRutas;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Login from \"../services/login/Login.js\";\nimport { LoggedOut, LoggedIn } from '@solid/react';\nimport { Link } from '@material-ui/core';\nimport \"typeface-roboto\";\nimport MisRutas from './MisRutas.js';\nimport logo1 from '../../assets/img/logo/logo1.svg';\n\nconst NavBar = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar >\n          <Link underline='none' color='inherit' href={'#/welcome'} className={classes.title}>\n            <img src={logo1} alt=\"Viade Logo\" style={{ height: '3vh', width: '3vh' }} /> Viade\n          </Link>\n\n          <LoggedIn><MisRutas /></LoggedIn>\n          <LoggedOut><Button className={classes.menuButton} href={\"#/register\"} color=\"inherit\">Sign up</Button></LoggedOut>\n          <Login />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: 20,\n    letterSpacing: 1,\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  menu: {\n    width: 150,\n  }\n}));\n\nexport default NavBar;","import React from 'react';\nimport NavBar from '../../graphic interface/NavBar.js';\nimport { Typography, Grid, Divider } from '@material-ui/core';\nimport 'typeface-roboto';\nimport logo1 from '../../../assets/img/logo/logo1.svg';\n\nconst Welcome = () => {\n\n    return (\n        <div>\n            <NavBar />\n            <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ marginTop: '30vh' }}\n            >\n                <Grid item xs={3} style={{marginBottom: '2vh'}}>\n                    <img src={logo1} alt=\"Viade Logo\" style={{ height: '10vh', width: '10vh' }} />\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography style={{ marginBottom: '10px' }} variant=\"h4\" color=\"inherit\" align=\"center\">Welcome to Viade.</Typography>\n                    <Divider />\n                    <Typography style={{ marginTop: '10px' }} variant=\"body1\" color=\"inherit\" align=\"center\">The first routes management system based on SOLID technology.</Typography>\n                </Grid>\n\n            </Grid>\n        </div>\n    );\n};\n\nexport default Welcome;\n","import React from 'react';\nimport \"typeface-roboto\";\nimport { Link, Typography } from '@material-ui/core';\n\nconst PageNotFound = () => {\n    \n    return (\n        <div style={{marginLeft:'5vh', marginTop:'5vh'}}>\n            <Typography variant=\"h4\">Sorry, there's nothing to see here</Typography>\n            <p>Go back to <Link href={\"#/\"}>Home</Link></p>\n        </div>\n    );\n};\n\nexport default PageNotFound;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport NavBar from '../../graphic interface/NavBar.js';\nimport Card from '@material-ui/core/Card';\nimport ContactsOutlinedIcon from '@material-ui/icons/ContactsOutlined';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 275,\n        margin: 50,\n    },\n    paper: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.warning.main,\n    },\n    form: {\n        width: '80%',\n        marginTop: theme.spacing(1),\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    submit: {\n        margin: theme.spacing(1, 0, 2),\n    },\n    link:{\n        margin: theme.spacing(1, 0, 2),\n    }\n}));\n\nexport default function Register() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <NavBar />\n            <Container component=\"main\" maxWidth=\"sm\">\n                <Card className={classes.root} elevation={4}>\n                    <CssBaseline />\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <AccountCircleIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">Hi! Welcome to Solid.</Typography>\n                        <div className={classes.form}>\n                             \n                            <Button\n                                fullWidth\n                                color=\"primary\"\n                                className={classes.link}\n                                startIcon={<EmojiPeopleIcon/>}\n                                onClick={() => window.open('https://solid.inrupt.com/how-it-works')}\n                            >How to choose a Provider?</Button>\n\n                            <Button\n                                fullWidth\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                startIcon={<ContactsOutlinedIcon/>}\n                                onClick={() => window.open('https://inrupt.net/register')}\n                            >Inrupt</Button>\n\n                            <Button\n                                fullWidth\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                startIcon={<ContactsIcon/>}\n                                onClick={() => window.open('https://solid.community/register')}\n                            >Solid Community</Button>\n\n                        </div>\n                    </div>\n                </Card>\n            </Container>\n        </div>\n    );\n}","import React, { Component } from 'react';\nimport { Map, TileLayer, Polyline } from 'react-leaflet';\n\nexport default class MapSnapshot extends Component {\n  points = this.props.route.getRouteElements().map((point) => (\n    [point.getLatitude(), point.getLongitude()]\n  ));\n\n  setPopup = () => { }\n\n  render() {\n    return (\n      <Map bounds={this.points} doubleClickZoom={false} dragging={false} keyboard={false}\n        scrollWheelZoom={false} tap={false} touchZoom={false} zoomControl={false} boxZoom={false}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Polyline positions={this.points} color='blue' />\n        ))}\n      </Map>\n    );\n  }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport MapSnapshot from '../map/MapSnapshot.js'\nimport Button from '@material-ui/core/Button';\nimport { Link, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 290,\n    marginBottom: '2vh',\n    marginTop: '2vh',\n    background: '#f7f7f7'\n  },\n  pos: {\n    // marginBottom: 12,\n    // marginTop: 12,\n    color: 'black'\n  },\n  link: {\n    // marginBottom: 20,\n    // marginTop: 10,\n  },\n});\n\nfunction getDate(){\n  let dates = ['2/4/2020', '12/3/2020', '1/4/2020', '6/3/2020', '22/2/2020'];\n  let randomElement = dates[Math.floor(Math.random() * dates.length)];\n  // console.log(\"SELECTED DATE: \"+randomElement);\n  return randomElement;\n}\n\nfunction getDistance(){\n  let dist = ['3.63km', '6.3km', '25.4km', '7.96km', '5.42km'];\n  let randomElement = dist[Math.floor(Math.random() * dist.length)];\n  // console.log(\"SELECTED DIST: \"+randomElement);\n  return randomElement;\n}\n\nexport default function MyRouteCard(props) {\n  const classes = useStyles();\n  // console.log(props.route);\n  return (\n    <Card elevation={5} className={classes.root}>\n      <CardContent>\n        <Grid container spacing={2}>\n\n          <Grid item xs={12}>\n            <MapSnapshot route={props.route}></MapSnapshot>\n          </Grid>\n\n          <Grid item xs={12} >\n            <Link underline='none' href={\"#/RouteDetails/\" + props.route.getId()}>\n              <Typography className={classes.link} variant=\"h5\" component=\"h2\">\n                {props.route.getName()}\n              </Typography>\n            </Link>\n          </Grid>\n\n          <Grid item xs={12} sm={5}>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              {/* {props.route.getDate()} */}\n              {getDate()}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12} sm={5}>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              {/* {props.route.getTotalDistance()} */}\n              {getDistance()}\n            </Typography>\n          </Grid>\n\n          <Button variant='outlined'\n            // style={{ color: 'white', background: 'black' }} \n            href={\"#/RouteDetails/\" + props.route.getId()}\n            color=\"inherit\"\n            style={{marginLeft:'auto', marginRight:'auto'}}>\n            Details\n          </Button>\n\n        </Grid>\n      </CardContent>\n    </Card >\n  );\n}","class RouteElement {\n    constructor(latitude, longitude, name, elevation) {\n\n        this.latitude = latitude;\n        this.longitude = longitude;\n        this.elevation = elevation;\n\n        if (name === undefined) {\n            this.name = \"\";\n        } else {\n            this.name = name;\n        }\n\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    getLatitude() {\n        return this.latitude;\n    }\n\n    getElevation() {\n        return this.elevation;\n    }\n\n    getLongitude() {\n        return this.longitude;\n    }\n\n    toJsonLatLng() {\n        return {\n            \"latitude\": this.latitude,\n            \"longitude\": this.longitude,\n        };\n    }\n}\n\nexport default RouteElement;","import { v4 as uuid } from \"uuid\";\nimport RouteElement from \"./RouteElement\";\n\nclass Route {\n\n    /**\n     * Constructor for a new Route. \n     * An id will be automatically generated (uuid v4).\n     * TotalDistance will also be automatically generated.\n     * \n     * RouteElements have name, latitude, longitude and elevation.\n     * \n     * @param {String} name Name of the route.\n     * @param {Date} date Date of the route.\n     * @param {String} description Description of the route.\n     * @param {Array} routeElements List of RouteElement objects, which are the trackpoints.\n     * @param {Array} comments List of comments\n     * @param {Array<String>} media List of urls of media (on the POD)\n     */\n    constructor(name, description, routeElements, comments, media, date) {\n        this.id = uuid().toString();\n        this.name = name;\n        this.date = date;\n        this.description = description;\n\n        this.media = media;\n        this.totalDistance = null;\n\n        if (comments === null) {\n            this.comments = [];\n        } else {\n            this.comments = comments;\n        }\n\n        if (routeElements[0] instanceof RouteElement) {\n            this.routeElements = routeElements;\n        } else {\n            this.routeElements = generateRouteElements(routeElements);\n        }\n    }\n\n    getId() {\n        return this.id;\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    getDate() {\n        return this.date;\n    }\n\n    getTime() {\n        return this.time;\n    }\n\n    getDescription() {\n        return this.description;\n    }\n\n    getRouteElements() {\n        return this.routeElements;\n    }\n\n    getTotalDistance() {\n        var total = 0;\n        var aux = 0;\n\n        for (let i = 1; i < this.routeElements.length; i++) {\n            aux = this.routeElements[i].getLatitude() - this.routeElements[i - 1].getLatitude();\n            total += this.addDistance(aux);\n            aux = this.routeElements[i].getLongitude() - this.routeElements[i - 1].getLongitude();\n            total += this.addDistance(aux);\n            aux = this.routeElements[i].getElevation() - this.routeElements[i - 1].getElevation();\n            total += this.addDistance(aux);\n        }\n\n        return total;\n    }\n\n    addDistance(aux) {\n        if (aux < 0) {\n            return -aux;\n        } else {\n            return aux;\n        }\n    }\n\n    getComments() {\n        return this.comments;\n    }\n\n    getMedia() {\n        return this.media;\n    }\n\n    addMedia(media) {\n        this.media.push(media);\n    }\n\n    addRouteElement(routeElement) {\n        this.routeElements.push(routeElement);\n    }\n\n    getJsonLD() {\n        let routePointsJson = [];\n        this.routeElements.forEach((p) => routePointsJson.push(p.toJsonLatLng()));\n        return JSON.stringify(\n            {\n                \"@context\": {\n                    \"@version\": 1.1,\n                    \"comments\": {\n                        \"@container\": \"@list\",\n                        \"@id\": \"viade:comments\"\n                    },\n                    \"description\": {\n                        \"@id\": \"schema:description\",\n                        \"@type\": \"xs:string\"\n                    },\n                    \"media\": {\n                        \"@container\": \"@list\",\n                        \"@id\": \"viade:media\"\n                    },\n                    \"name\": {\n                        \"@id\": \"schema:name\",\n                        \"@type\": \"xs:string\"\n                    },\n                    \"points\": {\n                        \"@container\": \"@list\",\n                        \"@id\": \"viade:points\"\n                    },\n                    \"latitude\": {\n                        \"@id\": \"schema:latitude\",\n                        \"@type\": \"xs:double\"\n                    },\n                    \"longitude\": {\n                        \"@id\": \"schema:longitude\",\n                        \"@type\": \"xs:double\"\n                    },\n                    \"elevation\": {\n                        \"@id\": \"schema:elevation\",\n                        \"@type\": \"xsd:double\"\n                    },\n                    \"author\": {\n                        \"@id\": \"schema:author\",\n                        \"@type\": \"@id\"\n                    },\n                    \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n                    \"schema\": \"http://schema.org/\",\n                    \"viade\": \"http://arquisoft.github.io/viadeSpec/\",\n                    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\n                },\n                \"name\": this.name,\n                \"author\": this.author,\n                \"description\": this.description,\n                \"comments\": this.comments,\n                \"media\": this.media,\n                \"points\": routePointsJson\n            }\n        );\n    }\n\n}\n\n/**\n * Method that receives a list of points and returns\n * a list of RouteElements\n * @param {Array} points List of points containing name, latitude, longitude, elevation. \n */\nfunction generateRouteElements(points) {\n    let routeElements = [];\n    points.forEach((p) => routeElements.push(new RouteElement(p.lat, p.lng)));\n    return routeElements;\n}\n\nexport default Route;","import Route from '../entities/Route.js';\nimport RouteElement from '../entities/RouteElement.js';\n\nclass ParserJsonLdToRoute {\n    \n    parse(file){    \n        var route = JSON.parse( file );\n\n        var name = route.name;\n        var description = route.description;\n        // var date = route.date;\n        var points = route.points;\n        var comments = [];\n        var media = [];\n        \n        let routeElements = this.parsePoints(points);\n\n        \n        return new Route(name, description, routeElements, comments, media);\n    }\n\n    parsePoints(points) {\n        let routeElements = [];\n        for(var i = 0; i < points.length; i++ ){\n            routeElements.push(new RouteElement(points[i].latitude, points[i].longitude));\n        }\n        return routeElements;\n    }\n}\n\nexport default ParserJsonLdToRoute;","import ParserJsonLdToRoute from \"./ParserJsonLdToRoute\";\n\nconst auth = require('solid-auth-client');\nconst FC = require('solid-file-client');\nconst fc = new FC(auth);\nconst parser = new ParserJsonLdToRoute();\n\nclass PodHandler {\n\n    constructor(session) {\n        this.session = session;\n\n        this.pod = session.webId.split(\"profile\")[0];\n        this.viadeFolder = \"viade/\";\n\n        this.defaultFolder = this.pod + this.viadeFolder;\n\n        this.routesFolder = \"routes/\";\n        this.resourcesFolder = \"resources/\"; // for photos and videos \n        this.commentsFolder = \"comments/\";\n    }\n\n    getRoutes\n\n    storeRoute(fileName, routeJson, callback = () => { }) {\n        let url = this.defaultFolder + this.routesFolder + fileName;\n        this.storeFile(url, routeJson, callback);\n    }\n\n    storeFile(url, data, callback) {\n        let response = fc.createFile(url, data);\n        // let successCode = null;\n        response.then(\n            (response) => { callback(0); }\n            , (error) => { callback(-1); }\n        );\n        // return successCode;\n    }\n\n    // async storeMedia(mediaList, callback = () => { }) {\n    //     if (!mediaList.length) {\n    //         return Promise.reject('No media to upload');\n    //     }\n    //     if (!validMediaType(mediaList)) {\n    //         return Promise.reject('Media must be image or video');\n    //     }\n\n    //     let url = this.defaultFolder + this.resourcesFolder;\n\n    //     let buildPath = '';\n    //     Array.from(mediaList).forEach(file => {\n    //         buildPath = url + file.name;\n    //         this.storeMedia(buildPath, file, file.type, callback)\n    //     });\n    // }\n\n    storeMedia(url, data, contentType, callback) {\n        let response = fc.putFile(url, data, contentType);\n        response.then(\n            (response) => { callback(response.url, response); }\n            , (error) => { callback(null, error); }\n        );\n    }\n\n    async findAllRoutes() {\n        let url = this.defaultFolder + this.routesFolder;\n\n        var routes = [];\n        \n        if (await fc.itemExists(url)) {\n            try {\n                let contents = await fc.readFolder(url);\n                let files = contents.files;\n\n                for (let i = 0; i < files.length; i++) {\n                    let fileContent = await fc.readFile(files[i].url);\n                    routes.push(parser.parse(fileContent));\n                }\n\n            } catch (error) {\n                // console.log(\"##### ERROR #####\");\n                // console.log(error);         // A full error response \n                // console.log(error.status);  // Just the status code of the error\n                // console.log(error.message); // Just the status code and statusText\n            }\n        } else {\n            console.log(\"There is no routes directory\");\n        }\n\n        // console.log(\"RUTAS\");\n        // console.log(routes);\n\n        return routes;\n    }\n}\n\n// const mediaType = {\n//     image: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\n//     video: /\\.(mp4|webm|ogg)$/i\n// }\n\n// function validMediaType(mediaList) {\n//     let valid = true;\n\n//     mediaList.forEach(file => {\n//         if (!(mediaType.image.test(file.name) || mediaType.video.test(file.name))) {\n//             valid = false;\n//         }\n//     });\n\n//     return valid;\n// }\n\n\n\nexport default PodHandler;","import auth from 'solid-auth-client';\nimport PodHandler from './PodHandler';\n\nexport async function uploadMedia(media) {\n    let session = await auth.currentSession();\n    let storageHandler = new PodHandler(session);\n    await storageHandler.storeMedia(media, (urlInPod, response) => {\n        let alertText = \"\";\n        if (urlInPod === null) {\n            alertText = \"ERROR UPLOADING MEDIA\"; // error\n        } else {\n            alertText = \"SUCCESS UPLOADING MEDIA\"; // success\n        }\n        alert(alertText);\n    });\n}\n\nexport async function uploadRoute(route, callback) {\n    let session = await auth.currentSession();\n    let storageHandler = new PodHandler(session);\n    let fileName = route.getName() + \"@\" + route.getId() + \".jsonld\";\n\n    // let successCode = -1; // -1 if error. 0 otherwise.\n    storageHandler.storeRoute(fileName, route.getJsonLD(), (status) => {\n        callback(status);\n    });\n}\n\nexport async function loadAllRoutes() {\n    let session = await auth.currentSession();\n    let storageHandler = new PodHandler(session);\n\n    let loadedRoutes = storageHandler.findAllRoutes();\n    return loadedRoutes;\n}","import { loadAllRoutes } from '../parser/RouteHandler';\n\nexport default {\n    routes: [],\n    selected: \"\",\n    addRouteToCache(route) {\n        if(route && !this.routes.find((obj) => route.name === obj.name)) {\n            this.routes.push(route);\n            // console.log(\"ROUTE ADDED TO CACHE\");\n        } else {\n            alert(\"ERROR TRYING TO ADDROUTE TO CACHE\");\n        }\n    }, \n    async getRoutesFromPod() {\n        if (this.routes.length === 0) {\n            this.routes = await loadAllRoutes();\n            // console.log(\"ROUTES FROM POD (CACHE)\");\n            // console.log(this.routes);\n        }\n        return this.routes;\n    },\n    getRoutesFromCache() {\n        // console.log(\"ROUTES FROM CACHE\");\n        // console.log(this.routes);\n        return this.routes;\n    },\n    clear() {\n        this.routes = [];\n        this.selected = null;\n    }\n};","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport MyRouteCard from './MyRouteCard';\nimport { LoggedIn } from '@solid/react';\nimport cache from '../../cache/RoutesChache';\n\nexport class ListUserRoutes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      routes: cache.getRoutesFromCache(),\n    };\n  }\n\n  sizeFunction() {\n    let size = [];\n    for (let index = 0; index < 5; index++) {\n      size.push(1);\n    }\n  }\n\n  render() {\n    const { routes } = this.state;\n\n    return (\n      <Grid container style={{ flexGrow: 1 }} spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={2}>\n        { routes.map(each => (\n          <Grid item>\n          <LoggedIn>\n            <MyRouteCard route={each} />\n          </LoggedIn>\n        </Grid>\n        ))}\n        </Grid>\n      </Grid>\n    </Grid>\n    )\n  }\n}\n\nexport default ListUserRoutes;","import React from \"react\";\nimport NavBar from '../../graphic interface/NavBar.js';\nimport ListUserRoutes from '../../graphic interface/ListUserRoutes.js';\n\nconst UserRoutes = () => {\n  return (\n    <div>\n      <div>\n        <NavBar />\n      </div>\n      <div>\n        <ListUserRoutes />\n      </div>\n    </div>\n  );\n};\n\nexport default UserRoutes;","import React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\n\nexport default class DetailsMap extends Component {\n  points = this.props.route.getRouteElements().map(point => (\n    [point.getLatitude(), point.getLongitude()]\n  ));\n\n  setPopup = () => { }\n\n  render() {\n    return (\n      <Map id=\"map\" bounds={this.points} zoom={16} height={5}>\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Polyline positions={this.points} color='blue' />\n\n        {this.props.route.getRouteElements().map((point) => (\n          <Marker position={[point.getLatitude(), point.getLongitude()]}>\n            <Popup>\n              <p>{point.getName()}</p>\n              <p>Latitude: {point.getLatitude()}</p>\n              <p>Longitude: {point.getLongitude()}</p>\n              <p>Elevation: {point.getElevation()}</p>\n            </Popup>\n          </Marker>\n        ))}\n      </Map>\n    )\n  }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport DetailsMap from '../map/DetailsMap.js';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function RouteDetails(props) {\n    const classes = useStyles();\n\n    return (\n        <Grid container className={classes.root} spacing={1}>\n            <Grid item xs={6}>\n                <Card elevation={5} className={classes.root}>\n                    <CardContent>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            {props.route.getName()}\n                        </Typography>\n\n                        <DetailsMap route={props.route}></DetailsMap>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item xs={6}>\n                <Grid container direction=\"column\" spacing={1} alignItems=\"stretch\" justify=\"flex-start\">\n                    <Grid item xs={12}>\n                        <Card elevation={5} className={classes.root}>\n                            <CardContent>\n                                <Typography className={classes.pos} >\n                                    {/* Date: {props.route.getDate()} */}\n                                    Date: 22/3/2020\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Card elevation={5} className={classes.root}>\n                            <CardContent>\n                                <Typography className={classes.pos} >\n                                    {/* Distance: {props.route.getTotalDistance()} */}\n                                    Distance: 3.63km\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Card elevation={5} className={classes.root}>\n                            <CardContent>\n                                <Typography className={classes.pos} >\n                                    {/* Time: {props.route.getTime()} */}\n                                    Time: 42 min\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Card elevation={5} className={classes.root}>\n                            <CardContent>\n                                <Typography className={classes.pos} >\n                                    Description:\n                                </Typography>\n                                <Typography className={classes.pos} >\n                                    {props.route.getDescription()}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    {/* <Grid item xs={12}>\n                        <Card elevation={5} className={classes.root}>\n                            <CardContent>\n                                <Typography className={classes.pos} >\n                                    Coments:\n                                </Typography>\n                                {\n                                    Array.isArray(props.route.getComments()) && //is empty??\n                                    props.route.getComments().map((comment) =>\n                                        (\n                                            <Typography className={classes.pos} >\n                                                {comment}\n                                            </Typography>\n                                        )\n                                    )\n                                }\n                            </CardContent>\n                        </Card>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","import React from \"react\";\nimport NavBar from '../../graphic interface/NavBar.js';\nimport { useParams } from \"react-router-dom\";\nimport RouteDetailsCard from \"../../graphic interface/RouteDetailsCard.js\";\nimport cache from '../../../cache/RoutesChache';\n\nconst RouteDetails = () => {\n  let { id } = useParams();\n\n  let myroute=cache.getRoutesFromCache().filter((r) => (r.getId() === id));\n\n  return (\n    <div>\n      <div>\n        <NavBar />\n      </div>\n      <div>\n        { <RouteDetailsCard route={myroute[0]} ></RouteDetailsCard> }\n      </div>\n    </div>\n  );\n};\n\nexport default RouteDetails;","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport DateFnsUtils from '@date-io/date-fns';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\n\nexport class DataForm extends Component {\n\n    handleDateChange = (date) => {\n        this.props.handleDateChange(date);\n    };\n\n    next = (e) => {\n        e.preventDefault();\n        this.props.handleNext();\n    }\n\n    handleMediaChange = (selectorFiles: FileList, code) => {\n        this.props.handleMediaChange(selectorFiles, code);\n    }\n\n    render() {\n\n        const { values, handleChange } = this.props;\n\n        return (\n            <React.Fragment>\n                <Typography variant=\"h6\" gutterBottom>\n                    Please, introduce the following data for your new route\n                </Typography>\n                <form onSubmit={this.next}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6} style={{ marginTop: 16 }}>\n                            <TextField\n                                required\n                                id=\"name\"\n                                name=\"name\"\n                                label=\"Name\"\n                                fullWidth\n                                defaultValue={values.name}\n                                autoComplete=\"routename\"\n                                onChange={handleChange('name')}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <KeyboardDatePicker\n                                    disableToolbar\n                                    required\n                                    variant=\"inline\"\n                                    id=\"date\"\n                                    name=\"date\"\n                                    format=\"MM/dd/yyyy\"\n                                    margin=\"normal\"\n                                    label=\"Date\"\n                                    value={values.date}\n                                    onChange={this.handleDateChange}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'date',\n                                    }}\n                                />\n                            </MuiPickersUtilsProvider>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                required\n                                id=\"description\"\n                                name=\"description\"\n                                label=\"Description\"\n                                multiline\n                                fullWidth\n                                defaultValue={values.description}\n                                rows=\"4\"\n                                variant=\"outlined\"\n                                onChange={handleChange('description')}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={3} >\n                            <input\n                                disabled\n                                accept=\"image/*\"\n                                style={{ display: 'none' }}\n                                id=\"media-photo\"\n                                multiple\n                                defaultValue={values.photos}\n                                type=\"file\"\n                                onChange={(e) => this.handleMediaChange(e.target.files, 0)} //photos\n                            />\n                            <label htmlFor=\"media-photo\">\n                                <Button disabled variant=\"contained\" color=\"default\" component=\"span\" startIcon={<AddAPhotoIcon />}>\n                                    Photos\n                            </Button>\n                            </label>\n                        </Grid>\n                        <Grid item xs={12} sm={6} >\n                            <input\n                                disabled\n                                accept=\"video/*\"\n                                style={{ display: 'none' }}\n                                id=\"media-video\"\n                                multiple\n                                defaultValue={values.videos}\n                                type=\"file\"\n                                onChange={(e) => this.handleMediaChange(e.target.files, 1)} //videos\n                            />\n                            <label htmlFor=\"media-video\">\n                                <Button disabled variant=\"contained\" color=\"default\" component=\"span\" startIcon={<CloudUploadIcon />}>\n                                    Videos\n                            </Button>\n                            </label>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormHelperText id=\"my-helper-text\">Fields marked with (*) are mandatory.</FormHelperText>\n                        </Grid>\n\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{\n                                marginTop: 12,\n                                marginLeft: 'auto'\n                            }}\n                            type=\"submit\"\n                        >\n                            Next\n                        </Button>\n                    </Grid>\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DataForm;\n","import React, { Component } from 'react';\nimport { Typography, Grid, Button, TextField } from '@material-ui/core';\n\nexport class ReviewForm extends Component {\n\n    next = (e) => {\n        e.preventDefault();\n        this.props.createRoute();\n        this.props.handleNext();\n    }\n\n    back = (e) => {\n        e.preventDefault();\n        this.props.handleBack();\n    }\n\n    getPointsText(points){\n        var pointsText = \"\";\n\n        points.forEach((p) => pointsText += \"Lat: \"+p.lat+\"\\tLong: \"+p.lng+\"\\n\");\n\n        return pointsText;\n    }\n\n    render() {\n\n        const { values } = this.props;\n\n        var month = values.date.getUTCMonth() + 1; //months from 1-12\n        var day = values.date.getUTCDate();\n        var year = values.date.getUTCFullYear();\n\n        const date = month + \"/\" + day + \"/\" + year;        \n\n        return (\n            <div>\n                <React.Fragment>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Please, review all the data\n                    </Typography>\n\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6} style={{ marginTop: 16 }}>\n                            <TextField\n                                disabled\n                                id=\"name\"\n                                name=\"name\"\n                                label=\"Name\"\n                                fullWidth\n                                defaultValue={values.name}\n                                variant=\"filled\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} style={{ marginTop: 16 }}>\n                            <TextField\n                                disabled\n                                id=\"date\"\n                                name=\"date\"\n                                label=\"Date\"\n                                fullWidth\n                                defaultValue={date}\n                                variant=\"filled\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                disabled\n                                id=\"description\"\n                                name=\"description\"\n                                label=\"Description\"\n                                multiline\n                                fullWidth\n                                defaultValue={values.description}\n                                rows=\"4\"\n                                variant=\"filled\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                disabled\n                                id=\"mapPoint\"\n                                name=\"mapPoint\"\n                                label=\"Track Points\"\n                                multiline\n                                fullWidth\n                                defaultValue={this.getPointsText(values.points)}\n                                rows=\"4\"\n                                variant=\"filled\"\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid container spacing={3} style={{ marginTop: 12 }}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"default\"\n                            style={{\n                                marginTop: 12,\n                                marginLeft: '1vh'\n                            }}\n                            onClick={this.back}\n                        >\n                            Back\n                        </Button>\n\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{\n                                marginTop: 12,\n                                marginLeft: 'auto'\n                            }}\n                            onClick={this.next}\n                        >\n                            Next\n                        </Button>\n                    </Grid>\n                </React.Fragment>\n            </div>\n        );\n    }\n}\n\nexport default ReviewForm;\n","import React, { Component } from 'react';\nimport { Map, Polyline, TileLayer, Marker } from 'react-leaflet';\n\nexport class EditableMap extends Component {\n\n    constructor() {\n\t\tsuper();\n        this.state = { points: [] };\n        this.firstPoint = true;\n        \n\t}\n\n    addPoint = (e) => {\n\t\tthis.state.points.push(e.latlng);\n        this.setState({ points: this.state.points.slice() });\n        \n        if(this.firstPoint === true) {\n            this.props.openNotif(\"You can move a point by dragging it and delete it just clicking on it\", 'info');\n            this.firstPoint = false;\n        }\n    }\n\n    updatePoint = (event) => {\n\t\tvar id = event.target.options.marker_index;\n\t\tvar position = event.target.getLatLng();\n\t\tconst { points } = this.state;\n\n\t\tpoints[id] = position;\n\t\tthis.setState({ points: points.slice() });\n\t}\n\n\tremovePoint = (event) => {\n        var id = event.target.options.marker_index;\n        const { points } = this.state;\n        points.splice(id, 1);\n        this.setState({ points: points.slice() });\n\n\t}\n    \n    getTrackPoints() {\n        return this.state.points.slice();\n    }\n\n    render() {\n        const position = [43.3619145, -5.8493887];\n\n        return (\n            <React.Fragment>\n                <Map\n                    center={position}\n                    zoom={12}\n                    style={{ width: \"52vh\", height: \"40vh\" }}\n                    onClick={this.addPoint}\n                >\n                    <TileLayer\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    />\n\n                    <Polyline positions={this.state.points} color='orange' />\n\n                    {this.state.points.map((position, index) =>\n                        <Marker\n                            marker_index={index}\n                            position={position}\n                            draggable={true}\n                            ondrag={this.updatePoint}\n                            onclick={this.removePoint}\n                        >\n                        </Marker>\n                    )}\n                </Map>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default EditableMap;\n","import React, { Component } from 'react';\nimport EditableMap from '../../../map/EditableMap';\nimport { Button, Typography, Grid, Snackbar, IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nexport class MapForm extends Component {\n\n    constructor() {\n        super();\n        this.points = React.createRef();\n        this.state = {\n            open: false,\n            message: \"\",\n            severity: '',\n            vertical: 'top',\n            horizontal: 'center',\n        };\n    }\n\n    next = (e) => {\n        e.preventDefault();\n        if (this.points.current.getTrackPoints() === 'undefined' || this.points.current.getTrackPoints().length === 0) {\n            this.openNotif(\"You must select at least one track point!!\", 'warning');\n            return;\n        }\n        this.props.handleNext();\n        this.props.handleMapPoints(this.points.current.getTrackPoints());\n    }\n\n    back = (e) => {\n        e.preventDefault();\n        this.props.handleBack();\n    }\n\n    openNotif = (text, newSeverity) => {\n        this.setState({\n            open: true,\n            message: text,\n            severity: newSeverity\n        });\n    };\n\n    closeNotif = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { open, message, severity } = this.state;\n        const { vertical, horizontal } = this.state;\n\n        return (\n            <React.Fragment>\n                <Snackbar\n                    anchorOrigin={{ vertical, horizontal }}\n                    open={open}\n                    action={\n                        <React.Fragment>\n                            <IconButton\n                                aria-label=\"close\"\n                                color=\"inherit\"\n                                onClick={this.closeNotif}\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                >\n                    <Alert onClose={this.closeNotif} severity={severity}>\n                        {message}\n                    </Alert>\n                </Snackbar>\n\n                <Typography variant=\"h6\" gutterBottom>\n                    Click on the map to add trackpoints to your route\n                </Typography>\n\n                <form onSubmit={this.next}>\n                    <EditableMap ref={this.points} openNotif={this.openNotif} />\n\n                    <Grid container spacing={3} style={{ marginTop: 12 }}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"default\"\n                            style={{\n                                marginTop: 12,\n                                marginLeft: '1vh'\n                            }}\n                            type=\"submit\"\n                            onClick={this.back}\n                        >\n                            Back\n                        </Button>\n\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{\n                                marginTop: 12,\n                                marginLeft: 'auto'\n                            }}\n                            type=\"submit\"\n                        >\n                            Next\n                        </Button>\n                    </Grid>\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default MapForm;\n\n","import React, { Component } from 'react';\nimport { Grid, IconButton, Tooltip } from '@material-ui/core';\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\nimport Typography from '@material-ui/core/Typography';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nexport class SuccessForm extends Component {\n\n    download = (e) => {\n        e.preventDefault();\n        this.props.handleDownload();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container>\n                    <Grid item xs={12} sm={2}>\n                        <DirectionsWalkIcon fontSize=\"large\" style={{\n                            fill: \"orange\", width: 65,\n                            height: 65\n                        }} />\n                    </Grid>\n                    <Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Typography variant=\"h5\" gutterBottom>\n                                Route created\n                        </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"subtitle1\">\n                                Your new track was succesfully created and saved\n                        </Typography>\n                        </Grid>\n                    </Grid>\n                    <Tooltip title=\"Download\" arrow>\n                        <IconButton\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{\n                                marginLeft: 'auto',\n                                // marginRight: '2vh'\n                            }}\n                            onClick={this.download}\n                        >\n                            <GetAppIcon fontSize=\"large\" style={{ fill: \"orange\" }} />\n                        </IconButton>\n                    </Tooltip>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default SuccessForm;","import React, { Component } from 'react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\nimport DataForm from '../stepper/dataform/DataForm';\nimport ReviewForm from '../stepper/reviewform/ReviewForm';\nimport MapForm from '../stepper/mapform/MapForm';\nimport NavBar from '../../graphic interface/NavBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport FilterHdrIcon from '@material-ui/icons/FilterHdr';\nimport SuccessForm from '../stepper/success/SuccessForm';\nimport { withStyles } from '@material-ui/styles';\nimport Route from '../../../entities/Route';\nimport { uploadRoute } from '../../../parser/RouteHandler';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Snackbar, IconButton } from '@material-ui/core';\nimport cache from '../../../cache/RoutesChache';\n\nexport class NewRouteForm extends Component {\n\n    constructor() {\n\n        super();\n        this.route = null;\n\n        this.state = {\n            open: false,\n            message: '',\n            vertical: 'top',\n            horizontal: 'center',\n            severity: '', // success, error, warning, info\n            // ----  route ----\n            activeStep: 0,\n            name: '',\n            description: '',\n            date: new Date(),\n            photos: [],\n            videos: [],\n            points: []\n        };\n    }\n\n    handleNext = () => {\n        const { activeStep } = this.state;\n        this.setState({ activeStep: activeStep + 1 });\n    };\n\n    handleBack = () => {\n        const { activeStep } = this.state;\n        this.setState({ activeStep: activeStep - 1 });\n    };\n\n    handleChange = (input) => (e) => {\n        this.setState({ [input]: e.target.value });\n    }\n\n    handleDateChange = (newDate) => {\n        this.setState({ date: newDate });\n    }\n\n    handleMediaChange = (selectorFiles: FileList, code) => { // this is not an error, is TypeScript\n        switch (code) {\n            case 0: // photos\n                this.setState({ photos: selectorFiles });\n                break;\n            case 1: // videos\n                this.setState({ videos: selectorFiles });\n                break;\n            default:\n                alert('Invalid media code!! ' + code);\n                break;\n        }\n    }\n\n    handleMapPoints = (newPoints) => {\n        this.setState({ points: newPoints });\n    }\n\n\n    // ###########################\n    //        Notification\n    // ###########################\n\n    openNotif = (text, newSeverity) => {\n        this.setState({\n            open: true,\n            message: text,\n            severity: newSeverity\n        });\n    };\n\n    closeNotif = () => {\n        this.setState({ open: false });\n    };\n\n\n    // ###########################\n    // Download and Upload methods\n    // ###########################\n\n    handleDownload = () => {\n        const fileData = this.route.getJsonLD();\n        const blob = new Blob([fileData], { type: \"text/plain\" });\n\t\tconst url = URL.createObjectURL(blob);\n\t\tconst link = document.createElement('a');\n\t\tlink.download = this.route.getName() + \".json\";\n\t\tlink.href = url;\n\t\tlink.click();\n    }\n\n    upload(route) {\n        cache.addRouteToCache(route);\n        return new Promise((resolve) => {\n            uploadRoute(route, (response) => resolve(response));\n        });\n    }\n\n    createRoute = () => {\n        const { name, description, date, photos, videos, points } = this.state;\n        let comments = null;\n        let media = [];\n\n        Array.from(photos).forEach((p) => media.push(p));\n        Array.from(videos).forEach((p) => media.push(p));\n\n        this.route = new Route(name, description, points, comments, media, date);\n\n        let statusPromise = this.upload(this.route);\n        statusPromise.then((status) => this.checkSuccessCode(status));\n    }\n\n    checkSuccessCode(code) {\n        switch (code) {\n            case -1: // error\n                this.openNotif(\"There was an error during this operation\", 'error');\n                break;\n            case 0: // success\n                this.openNotif(\"Your route was successfully saved\", 'success');\n                break;\n            default:\n                throw new Error('Unknown Success Code ' + code);\n        }\n    }\n\n    render() {\n\n        const { activeStep } = this.state;\n        const { name, description, date, photos, videos, points } = this.state;\n        const values = { activeStep, name, description, date, photos, videos, points };\n\n        const { classes } = this.props;\n\n        const { open, message, severity } = this.state;\n        const { vertical, horizontal } = this.state;\n\n        return (\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <NavBar />\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        action={\n                            <React.Fragment>\n                                <IconButton\n                                    aria-label=\"close\"\n                                    color=\"inherit\"\n                                    onClick={this.closeNotif}\n                                >\n                                    <CloseIcon />\n                                </IconButton>\n                            </React.Fragment>\n                        }\n                    >\n                        <Alert onClose={this.closeNotif} severity={severity}>\n                            {message}\n                        </Alert>\n                    </Snackbar>\n\n                    <main className={classes.layout}>\n                        <Paper className={classes.paper}>\n                            <Avatar className={classes.avatar}>\n                                <FilterHdrIcon fontSize=\"large\" />\n                            </Avatar>\n\n                            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                                Create your own route\n                            </Typography>\n\n                            <Stepper activeStep={activeStep} className={classes.stepper}>\n                                {steps.map((label) => (\n                                    <Step key={label}>\n                                        <StepLabel>{label}</StepLabel>\n                                    </Step>\n                                ))}\n                            </Stepper>\n\n                            <React.Fragment>\n                                {getStepContent(activeStep,\n                                    values,\n                                    this.handleNext,\n                                    this.handleBack,\n                                    this.handleChange,\n                                    this.handleDateChange,\n                                    this.handleMediaChange,\n                                    this.handleMapPoints,\n                                    this.handleDownload,\n                                    this.createRoute\n                                )}\n                            </React.Fragment>\n                        </Paper>\n                    </main>\n                </React.Fragment>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nconst steps = ['Basic data', 'Map', 'Review your route'];\n\nfunction getStepContent(step,\n    values,\n    handleNext,\n    handleBack,\n    handleChange,\n    handleDateChange,\n    handleMediaChange,\n    handleMapPoints,\n    handleDownload,\n    createRoute) {\n    switch (step) {\n        case 0:\n            return <DataForm\n                handleNext={handleNext}\n                handleChange={handleChange}\n                handleDateChange={handleDateChange}\n                handleMediaChange={handleMediaChange}\n                values={values}\n            />;\n        case 1:\n            return <MapForm\n                handleNext={handleNext}\n                handleBack={handleBack}\n                handleMapPoints={handleMapPoints}\n                values={values}\n            />;\n        case 2:\n            return <ReviewForm\n                handleNext={handleNext}\n                handleBack={handleBack}\n                values={values}\n                createRoute={createRoute}\n            />;\n        case 3:\n            return <SuccessForm\n                handleDownload={handleDownload}\n            />;\n        default:\n            throw new Error('Unknown step ' + step);\n    }\n}\n\nconst useStyles = (theme) => ({\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            width: 600,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3),\n        },\n    },\n    stepper: {\n        padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n    avatar: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        backgroundColor: theme.palette.warning.main,\n    },\n    icon: {\n        width: 65,\n        height: 65,\n    },\n    grid: {\n        marginLeft: theme.spacing(2),\n    }\n});\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default withStyles(useStyles)(NewRouteForm);","import React, { Fragment } from \"react\";\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Welcome  from \"./welcome/Welcome.js\";\nimport PageNotFound from \"./pagenotfound/PageNotFound.js\";\nimport Register from '../services/register/Register.js';\nimport UserRoutes from './routes/UserRoutes.js';\nimport RouteDetails from './routes/RouteDetails.js';\nimport NewRouteForm from \"./newrouteform/NewRouteForm.js\";\n\nconst Routes = () => (\n  <HashRouter>\n    <Fragment>\n      <Switch>\n        <Route exact path=\"/404\" component={PageNotFound} />\n        <Redirect exact from=\"/\" to=\"/welcome\" />\n        <Route exact path=\"/welcome\" component={Welcome} />\n        <Route exact path=\"/myroutes\" component={UserRoutes} />\n        <Route exact path=\"/register\" component={Register}/>\n        <Route exact path=\"/newRoute\" component={NewRouteForm}/>\n        <Route exact path=\"/RouteDetails/:id\" component={RouteDetails}/>\n        <Redirect to=\"/404\" />\n      </Switch>\n    </Fragment>\n  </HashRouter>\n);\n\nexport default Routes;\n","import React from 'react';\nimport Routes from './components/containers/Routes.js';\nimport \"./App.css\";\nimport { Helmet } from 'react-helmet';\nimport cache from './cache/RoutesChache';\n\nasync function getRoutes(){\n  return await cache.getRoutesFromPod();\n}\n\nfunction App() {\n  getRoutes();\n  return (\n    <div>\n      <Helmet>\n        <title>{'Viade'}</title>\n      </Helmet>\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport teal from '@material-ui/core/colors/teal';\n\nconst theme = createMuiTheme(\n    {\n        palette: {\n            primary: {//amber,\n                main: teal[700],\n            }\n        }\n    }\n);\n\nReactDOM.render(<MuiThemeProvider theme = {theme}><App /></MuiThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo1.fd8da136.svg\";"],"sourceRoot":""}